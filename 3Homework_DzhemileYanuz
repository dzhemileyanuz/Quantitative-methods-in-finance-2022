#Problem1
FactorialFunction <- function(InputNumber){
   InputNumber<- as.integer(InputNumber)
   for(k in 1:(InputNumber-1)){
    if(InputNumber > 0){
     InputNumber <- as.numeric(InputNumber*k) 
     Result <- InputNumber
    } else if (InputNumber == 0){
      Result <- 1
    } else{
      Result <- NaN
    }
  }
  return(Result)
}

#Problem2
  SDFunction <- function(InputVector)
  {
    len <- length(InputVector)
    sq_dev <- (InputVector - mean(InputVector))^2
    Result <- sqrt(sum(sq_dev)/(len-1))
    return(Result)
  } 
  
  vec <- c(1:10)
  SDFunction(vec)
  sd(vec)
  
#Problem3
library(nycflights13)
library(tidyverse)

#Problem5.6.7
not_cancelled <- flights %>%
    filter(!is.na(dep_delay), !is.na(arr_delay))
  
not_cancelled %>% 
    count(dest)
  
not_cancelled %>%
    group_by(dest) %>%
    summarise(n = length(dest))
  
not_cancelled %>%
    group_by(dest) %>%
    summarise(n = n())
  
not_cancelled %>%
    group_by(tailnum) %>%
    tally()
  
not_cancelled %>% 
    count(tailnum, wt = distance)
  
not_cancelled %>%
    group_by(tailnum) %>%
    summarise(n = sum(distance))
  
not_cancelled %>%
    group_by(tailnum) %>%
    tally(distance)
    
#4
cancelled <-flights%>%
  filter(is.na(dep_delay))%>%
  group_by(month, day)%>%
  summarise(CancelledPerDay = n())

flights%>%
  group_by(day)%>%
  mutate(n(is.na(dep_delay)))%>%
  summarise(AverageDelay = mean(dep_delay))%>%
  

ggplot(data = cancelled, mapping = aes(x = CancelledPerDay)) + 
  geom_freqpoly(binwidth = 10)

ggplot(data = cancelled, mapping = aes(x = CancelledPerDay, y = month)) + 
  geom_point(alpha = 1/10)


DelayAvg <- not_cancelled%>%
  group_by(month,day)%>%
  summarise(AverageDelay=mean(dep_delay))

ggplot(data = DelayAvg, mapping = aes(x = AverageDelay)) + 
  geom_freqpoly(binwidth = 10)
  
ggplot(data = DelayAvg, mapping = aes(x = AverageDelay, y = month)) + 
  geom_point(alpha = 1/10)
  
  #5
  flights %>%
    group_by(carrier) %>%
    summarise(arr_delay = mean(arr_delay, na.rm = TRUE)) %>%
    arrange(desc(arr_delay))
  
  filter(airlines, carrier == "F9")
  
  flights %>%
    filter(!is.na(arr_delay)) %>%
    # Total delay by carrier within each origin, dest
    group_by(origin, dest, carrier) %>%
    summarise(
      arr_delay = sum(arr_delay),
      flights = n()
    ) %>%
    group_by(origin, dest) %>%
    mutate(
      arr_delay_total = sum(arr_delay),
      flights_total = sum(flights)
    ) %>%
    ungroup() %>%
    mutate(
      arr_delay_others = (arr_delay_total - arr_delay) /
        (flights_total - flights),
      arr_delay_mean = arr_delay / flights,
      arr_delay_diff = arr_delay_mean - arr_delay_others
    ) %>%
    filter(is.finite(arr_delay_diff)) %>%
    group_by(carrier) %>%
    summarise(arr_delay_diff = mean(arr_delay_diff)) %>%
    arrange(desc(arr_delay_diff))
    
    flights %>%
    count(dest, sort = TRUE)
    
  #Problem
